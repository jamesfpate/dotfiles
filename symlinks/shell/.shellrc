#brew
if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

#zellij
#if [[ $- == *i* && -z "$ZELLIJ" ]]; then
#    zellij ls
#fi

#npm
if [ ! -d ~/.npm-global ]; then
  mkdir -p ~/.npm-global
  npm config set prefix ~/.npm-global
fi
if [ -d ~/.npm-global/bin ]; then
  export PATH=~/.npm-global/bin:$PATH
fi
#compinit
autoload -U compinit; compinit

#fzf-tab
FZF_TAB_PLUGIN=/nix/store/*zsh-fzf-tab*/share/fzf-tab/fzf-tab.plugin.zsh
if [[ -f $FZF_TAB_PLUGIN ]]; then
    source $FZF_TAB_PLUGIN
fi
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

#zsh-autosuggest
ZSH_AUTOSUGGESTIONS_PLUGIN=/nix/store/*zsh-autosuggestions*/share/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -f $ZSH_AUTOSUGGESTIONS_PLUGIN ]] && source $ZSH_AUTOSUGGESTIONS_PLUGIN

#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=60'

#dir color
#export LS_COLORS="di=94"
export LS_COLORS="di=38;5;103"  # Dark blue-grey

#shell specific
if [ -n "$BASH_VERSION" ]; then
	#posh
	eval "$(oh-my-posh init bash --config ~/.config/omp/config.omp.json)"
elif [ -n "$ZSH_VERSION" ]; then
	#posh
	eval "$(oh-my-posh init zsh --config ~/.config/omp/config.omp.json)"
fi

#start devbox
#if [[ -z "$DEVBOX_SHELL" ]] && command -v devbox &> /dev/null && [[ -f devbox.json ]]; then
#    devbox shell
#fi

#lsd
alias ls='lsd'
alias la='lsd -la'
alias ll='lsd -l'
alias lt='lsd --tree'

#1password
alias 1l='eval $(op signin --account my.1password.com)'
alias 1r="op run --no-masking --env-file=$HOME/.1password-personal --"
alias 1s="1l && 1r devbox shell"
alias 1="1s"
alias 1i="source <(op inject --env-file=$HOME/.1password-personal)"

#projects
alias lab="zellij attach --create lab"
alias dot="zellij attach --create dot" 
alias kw="zellij attach --create kw"

#zellij
alias z="zellij attach"
alias za="zellij attach"
alias zc="zellij attach --create"
alias zl="zellij ls"

#git
alias ga="git add ."
alias gc="git commit -m"
alias gp="git push"
alias gac="git add . && git commit -m"

#nvim
alias n="nvim"
